#include <LiquidCrystal.h>

int rpin = 10;
int ypin = 9;
int gpin = 8;
int pedg = 13;
int pedr = 6;
int buttonstate = 1;
int buttonPin = 7;

const int ytime = 2000;     // Yellow light duration
const int wtime = 2000;     // Pedestrian crossing time
const int resetTime = 1500; // Reset time before normal cycle resumes

bool pedestrianRequest = false;

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

void setup() {
  pinMode(rpin, OUTPUT);
  pinMode(ypin, OUTPUT);
  pinMode(gpin, OUTPUT);
  pinMode(pedg, OUTPUT);
  pinMode(pedr, OUTPUT);

  pinMode(buttonPin, INPUT_PULLUP);

  // Initial state
  digitalWrite(rpin, LOW);
  digitalWrite(ypin, LOW);
  digitalWrite(gpin, HIGH);
  digitalWrite(pedr, HIGH);
  digitalWrite(pedg, LOW);

  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.print("traffic - Go ");
  lcd.setCursor(0, 1);
  lcd.print("ped - stop");
}

void loop() {
  // Check for pedestrian button press
  if (digitalRead(buttonPin) == LOW) { // Button is pressed
    delay(50); // Debounce
    if (digitalRead(buttonPin) == LOW) {
      pedestrianRequest = true;
      while (digitalRead(buttonPin) == LOW) {
        delay(10); // Wait for button release
      }
    }
  }

  // Handle pedestrian request
  if (pedestrianRequest) {
    // Step 1: Green OFF → Yellow ON
    digitalWrite(gpin, LOW);
    digitalWrite(ypin, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("traffic - wait");
    lcd.setCursor(0, 1);
    lcd.print("ped - stop");
    delay(ytime);

    // Step 2: Yellow OFF → Red ON
    digitalWrite(ypin, LOW);
    digitalWrite(rpin, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("traffic - stop");
    lcd.setCursor(0, 1);
    lcd.print("ped - wait");
    delay(1000);

    // Step 3: Ped Red OFF → Green ON
    digitalWrite(pedr, LOW);
    digitalWrite(pedg, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("traffic - stop");
    delay(1500);
    for(int i=0;i<6;i++){
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("ped - cross");
      lcd.setCursor(2,1);
      lcd.print(i);
      delay(1000);
    }
    for(int i=0;i<2;i++){
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("pedestrian stop");
      lcd.clear();
      delay(500  );
    }
      
    delay(2000);

    // Step 4: Ped Green OFF → Red ON
    digitalWrite(pedg, LOW);
    digitalWrite(pedr, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("traffic - stop");
    lcd.setCursor(0, 1);
    lcd.print("ped - stop");
    delay(resetTime);

    // Step 5: Red OFF → Green ON
    digitalWrite(rpin, LOW);
    digitalWrite(gpin, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("traffic - go");
    lcd.setCursor(0, 1);
    lcd.print("ped - stop");

    pedestrianRequest = false;
  }

  delay(50);
}
